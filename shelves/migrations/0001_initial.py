# Generated by Django 2.2.28 on 2023-03-28 16:35

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('Book', 'Book'), ('Movie', 'Movie'), ('Show', 'Show'), ('Song', 'Song')], max_length=50)),
                ('coverImage', models.ImageField(blank=True, upload_to='')),
                ('writer', models.CharField(max_length=50)),
                ('language', models.CharField(max_length=50)),
                ('releaseDate', models.DateField(blank=True, validators=[django.core.validators.MaxValueValidator(limit_value=datetime.date(2023, 3, 28))])),
                ('avgScore', models.FloatField(default=0)),
                ('slug', models.SlugField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('title', 'type')},
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, upload_to='')),
                ('age', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(13)])),
                ('joinDate', models.DateField(default=datetime.date.today)),
                ('friends', models.ManyToManyField(blank=True, to='shelves.UserProfile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.DurationField(default=datetime.timedelta(0))),
                ('media', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shelves.Media')),
            ],
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episodes', models.IntegerField(default=0)),
                ('seasons', models.IntegerField(default=0)),
                ('media', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shelves.Media')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.DurationField(default=datetime.timedelta(0))),
                ('media', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shelves.Media')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(max_length=13, validators=[django.core.validators.MinLengthValidator(13), django.core.validators.RegexValidator(re.compile('^\\d+(?:\\d+)*\\Z'), code='invalid', message=None)])),
                ('media', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shelves.Media')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('rating', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('comment', models.TextField(blank=True, max_length=1000)),
                ('publishDate', models.DateField(default=datetime.date.today)),
                ('likes', models.IntegerField(default=0)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shelves.Media')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('media', 'user')},
            },
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('sender', 'receiver')},
            },
        ),
    ]
